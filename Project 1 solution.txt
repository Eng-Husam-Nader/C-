#include <iostream>
#include <cstdlib>
#include <ctime>
#include <cmath>
using namespace std;

enum enChoice {Stone = 1, Paper = 2, Scissor = 3};

struct stGameResults
{
    short GameRounds;
    short Player1Won;
    short ComputerWon;
    short Draw;
    string FinalWinner;
};

void StartGame();

enChoice YourChoice()
{
    short Choice = 0;
    do
    {
        cout << "Your Choice : [1] : Stone, [2] : Paper, [3] : Scissors ?\n";
        cin >> Choice;

    } while (Choice < 1 || Choice >3);
    

    return (enChoice) Choice;

}

short RandomNumber(short From, short To)
{
    short randNum = rand() % (To - From + 1) + From;
    return randNum;
}

short ReadHowManyRounds()
{
    short Rounds = 0;
    do
    {
        cout << "How many rounds from 1 to 10?" << endl;
        cin >> Rounds;
    } while(Rounds < 1 || Rounds > 10);
    return Rounds;
}

string PlayerChoice(short Choice)
{
    string PlayerChoice = "";

    switch ((enChoice)Choice) {

    case  enChoice::Stone:
        PlayerChoice = "Stone";
        break;

    case  enChoice::Paper:
        PlayerChoice = "Paper";
        break;

    case enChoice::Scissor:
        PlayerChoice = "Scissor";
        break;

    default:
        PlayerChoice = "Invalid Choice";
        break;
    }
    return PlayerChoice;
}
 
string RoundWinner(string PlayerChoice, string ComputerChoice)
{
    string RoundWinner = "";

    if (PlayerChoice == "Stone")
    {
        if (ComputerChoice == "Stone") 
        {
        return RoundWinner = "[No Winner]";
        }
        else if (ComputerChoice == "Paper")
        {
         return RoundWinner = "[Computer]";
        }
        else
         return RoundWinner = "[Player1]";
    }

  else if (PlayerChoice == "Paper")
    {
        if (ComputerChoice == "Stone")
        {
            return RoundWinner = "[Player1]";
        }
        else if (ComputerChoice == "Paper")
        {
            return RoundWinner = "[No Winner]";
        }
        else
            return RoundWinner = "[Computer]";
    }

  else if (PlayerChoice == "Scissor")
    {
        if (ComputerChoice == "Stone")
        {
            return RoundWinner = "[Computer]";
        }
        else if (ComputerChoice == "Paper")
        {
            return RoundWinner = "[Player1]";
        }
        else
            return RoundWinner = "[No Winner]";
    }


}

void RoundsResults(string PlayerChoice, string ComputerChoice, string RoundWinner)
{

    cout << "\n Player1 Choice: " << PlayerChoice;
    cout << "\n Computer Choice: " << ComputerChoice;
    cout << "\n Round Winner: " << RoundWinner;
    cout << "\nــــــــــــــــــ\n";
}

void ScreenColor(string RoundWinner)
{
    if (RoundWinner == "[No Winner]") 
    {
        system("color 6f"); // Yellow
    }
    else if (RoundWinner == "[Player1]")
    {
        system("color 2f"); // Green
    }
    else if (RoundWinner == "[Computer]")
    {
        cout << "\a";
        system("color 4f"); // Red
    }

}

stGameResults GameResult(short Rounds)
{
    stGameResults GameResults;
    GameResults.GameRounds = Rounds;
    GameResults.Player1Won = 0;
    GameResults.ComputerWon = 0;
    GameResults.Draw = 0;   
    GameResults.FinalWinner = "";

    for (int i = 1; i <= Rounds; i++)
    {
        cout << "\nround [" << i << "] begins:\n";
        enChoice Player = YourChoice();
        enChoice Computer = (enChoice)RandomNumber(1, 3);

        string PlayerStr = PlayerChoice(Player);
        string ComputerStr = PlayerChoice(Computer); // Reuse the same function
        string Winner = RoundWinner(PlayerStr, ComputerStr);

        // Update results
        if (Winner == "[Player1]")
            GameResults.Player1Won++;
        else if (Winner == "[Computer]")
            GameResults.ComputerWon++;
        else
            GameResults.Draw++;

        // Show results for this round
        cout << "\nـــــــRound [" << i << "] ـــــــ\n";
        RoundsResults(PlayerStr, ComputerStr, Winner);
        ScreenColor(Winner);
    }

    // Determine final winner
    if (GameResults.Player1Won > GameResults.ComputerWon)
        GameResults.FinalWinner = "Player1";
    else if (GameResults.Player1Won < GameResults.ComputerWon)
        GameResults.FinalWinner = "Computer";
    else
        GameResults.FinalWinner = "Draw";

    return GameResults;
}

void GameOverScreen()
{
    cout << "\tـــــــــــــــــــــــــــــــــــــــــــ\n\n";
    cout << "\t\t+++ G a m e O v e r +++\n\n";
    cout << "\tـــــــــــــــــــــــــــــــــــــــــــ\n\n";

}

void FinalGameResult(stGameResults GameResults)
{
    

 cout << "\tـــــــــ[ Game Results]ــــــــ\n\n";
 cout << "\t Game Rounds \t: " << GameResults.GameRounds << endl;
 cout << "\t Player1 won times: \t " << GameResults.Player1Won << endl;
 cout << "\t Computer won times: \t " << GameResults.ComputerWon << endl;
 cout << "\t Draw times: \t " << GameResults.Draw << endl;
 cout << "\t Final Winner: \t " << GameResults.FinalWinner << endl;

}

void ResetScreen()
{
    string YesNo = "";
    do
    {
        cout << "Do you want to play again? Y/N?\n";
        cin >> YesNo;
        if (YesNo == "Y" || YesNo == "y")
        {
            system("color 07");
            StartGame();

        }
        else if (YesNo == "N" || YesNo == "n")
        {
            system("color 07");
            cout << "\nThanks for playing!\n";
            return; // means end the command
        }

    } while  (YesNo != "Y" && YesNo != "y" && YesNo != "N" && YesNo != "n");
    
        
}

void StartGame()
{
    short rounds = ReadHowManyRounds();
    stGameResults GameResults = GameResult(rounds);
    GameOverScreen();
    FinalGameResult(GameResults);
    ResetScreen();

}

int main()
{
    srand((unsigned)time(NULL));

    StartGame();
       
    return 0;
}
